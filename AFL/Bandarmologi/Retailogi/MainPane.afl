/* 
 * Copyright (C)2017 PT. Stosia Teknologi Investasi
 *
 * This file is licensed under  GNU GPL (General Public License) version 3.
 *
 * File ini dilisensikan kepada Anda, bukan  Anda miliki.  Pemilik file ini
 * adalah pemegang  hak cipta ("copyright holder") di atas. Gunakanlah file
 * ini sesuai dengan lisensi yang telah ditetapkan untuk file ini.
 *
 * File ini  berlisensi  GNU GPL (General Public License)  versi 3. Artinya
 * kalau Anda  memodifikasi file ini, atau membuat karya lain yang berbasis
 * file ini  ("derivative work"),  maka Anda  wajib  mendistribusikan  kode
 * modifikasi atau karya tersebut kepada publik. Hal ini untuk menjaga agar
 * pengetahuan yang ada di sini menjadi lebih berkembang  di masa mendatang 
 * untuk kemajuan kita bersama.
 *
 * Silakan memakai kode ini untuk kepentingan apapun termasuk untuk mencari
 * profit di pasar saham baik secara perorangan atau organisasi, asal tidak
 * jahat. Sebagai tambahan permintaan, kami menghimbau untuk TIDAK  menjual
 * kode/file  ini secara  apa adanya  atau dalam bundel  produk yang dijual
 * secara komersial, karena hal itu tidak etis.
 *
 * Untuk penjelasan lebih lanjut silakan bertanya kepada kami.  Untuk detil
 * lisensi GPLv3  silakan lihat file GPLv3-LICENSE.md  yang didistribusikan
 * bersama file ini.
 *
 * Author: Benny Prijono <benny@stosia.com>
 * Contributors:
 *  - 
 */
_t0 = GetPerformanceCounter();

#include_once <..\Quant.id\AFL\Bandarmologi\Retailogi\RetailogiCommon.afl>

_SECTION_BEGIN("Price");
	_N(Title = StrFormat(QID_VERSION_LINE + " -- {{NAME}} - {{INTERVAL}} {{DATE}} {{VALUES}}"));
	
	SetChartOptions(0, chartShowDates);
	SetBarFillColor(IIf(C >= Open, GetChartBkColor(), ColorBlend(GetChartBkColor(), colorBrown, 0.3)));
	Plot( C, "Close",  
		  IIf(C >= Open, ColorBlend(GetChartBkColor(), colorGreen, 0.5), 
		                 ColorBlend(GetChartBkColor(), colorBrown, 0.5)), 
		  GetPriceStyle() | styleOwnScale, Null, Null, 0, 1); 
_SECTION_END();


_SECTION_BEGIN("Retailogi");
	// Init master
	stInitRetailogi(True);

	// Background text
	stSetBackgroundTitle(Name());
	stSetBackgroundSubtitle("Retailogi System");
	stSetBackgroundSubsubtitle(QID_VERSION_LINE);
	
	if (stRetailogiParamUseValue) {
		retail = stBdGetRetailCumValue(stRetailogiStartBalanceDate);
		_N(satuan = "(B Rp)");
	} else {
		retail = stBdGetRetailCumShares(stRetailogiStartBalanceDate);
		_N(satuan = "(Lot)");
	}

	if (stRetailogiParamUseIVR) {
		invRetail = stInvert(retail);
		Plot(stAutoPrec(invRetail), "Inverted retail " + satuan, ColorBlend(colorLightBlue, GetChartBkColor(), 0.5), styleDashed, Null, Null, 0, 5, 3);
		x = LastValue( BarIndex() ) + 1;
		y = LastValue( invRetail );
		PlotTextSetFont( "IVR", "Arial", 11, x, y, GetChartBkColor(), colorLightBlue, -12/2 );
	} else {
		Plot(stAutoPrec(retail), "Total retail " + satuan, ColorBlend(colorRed, GetChartBkColor(), 0.5), styleDashed, Null, Null, 0, 5, 3);
		x = LastValue( BarIndex() ) + 1;
		y = LastValue( retail );
		PlotTextSetFont( "RTL", "Arial", 10, x, y, GetChartBkColor(), colorRed, -12/2 );
	}
	
_SECTION_END();

_t1 = GetPerformanceCounter();
_TRACE(Name() + " Retailogi main: " + Int(_t1 - _t0) + " ms");
