/* 
 * Copyright (C) 2017 Benny Prijono <benny@stosia.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
 */
#include_once <..\..\quant.id\AFL\Tools.afl>

//
// Foreign flow interval value is the foreign NET buy/sell for each
// interval, where interval can be intraday or daily. Interval greater than
// one day is not supported yet.
//
// Return:
//   foreign flow NET value array for each interval (in milyar Rp)
//
function ffGetIntervalValue()
{
	odbcConnectDatabase();

	if (Interval() < inDaily) {
		ffIntVal = odbcGetArraySQL( " SELECT INT_NET_VALUE, dtime " + 
									 " FROM v_adj_intraday_foreign " +
									 " WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	} else if (Interval() >= inDaily) {
		if (Interval() > inDaily) {
			printf("** WARNING **\nInterval greater than daily is incorrect!\n");
		}
		
		ffIntVal = odbcGetArraySQL( " SELECT DAY_NET_VALUE, dtime " + 
									" FROM v_adj_intraday_foreign " +
									" WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	}
	
	return ffIntVal;
}

//
// Get foreign BUY value (in milyar Rp) for each interval
//
function ffGetIntervalBuyValue()
{
	odbcConnectDatabase();

	if (Interval() < inDaily) {
		ffIntBuyValue = odbcGetArraySQL( " SELECT int_buy_value, dtime " + 
										 " FROM v_adj_intraday_foreign " +
										 " WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	} else if (Interval() >= inDaily) {
		if (Interval() > inDaily) {
			printf("** WARNING **\nInterval greater than daily is incorrect!\n");
		}
		
		ffIntBuyValue = odbcGetArraySQL( " SELECT day_buy_value, dtime " + 
										 " FROM v_adj_intraday_foreign " +
										 " WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	}

	return ffIntBuyValue;
}

//
// Get foreign SELL value (in milyar Rp) for each interval
//
function ffGetIntervalSellValue()
{
	odbcConnectDatabase();

	if (Interval() < inDaily) {
		ffIntBuyValue = odbcGetArraySQL( " SELECT int_sell_value, dtime " + 
										 " FROM v_adj_intraday_foreign " +
										 " WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	} else if (Interval() >= inDaily) {
		if (Interval() > inDaily) {
			printf("** WARNING **\nInterval greater than daily is incorrect!\n");
		}
		
		ffIntBuyValue = odbcGetArraySQL( " SELECT day_sell_value, dtime " + 
										 " FROM v_adj_intraday_foreign " +
										 " WHERE ticker='" + Name() + "' ORDER BY dtime ASC") / MILYAR;
	}

	return ffIntBuyValue;
}

//
// Get foreign balance from the interval value. Foreign balance is the total cummulative value 
// of foreign flow.
//
function ffGetBalanceFromInterval(ffIntervalValue)
{
	if (Interval() < inDaily) {
		ffBalance = SumDays(ffIntervalValue, 1);
	} else {
		ffBalance = Cum(ffIntervalValue);
	}
	
	return ffBalance;
}

//
// Get foreign balance. Foreign balance is the total cummulative value of foreign flow.
//
function ffGetBalance()
{
	ffIntervalValue = ffGetIntervalValue();
	return ffGetBalanceFromInterval(ffIntervalValue);
}
